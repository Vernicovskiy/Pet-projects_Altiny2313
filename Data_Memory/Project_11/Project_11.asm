
/*РАБОТА С ПАМЯТЬЮ ДАННЫХ*/

.include "tn2313def.inc"

.def	temp	=R16

;#############################
;### СЕГМЕНТ ПАМЯТИ ДАННЫХ ###
;#############################
.dseg
.org	0x60		;Ячейки памяти данных начинаются с адреса 0х60 сразу за РВВ

cell:	.byte	2	;Определили для ячейки cell 2 байта
					;Первый байт ячейки cell расположен по адресу 0х60
					;Второй байт - по адресу 0x61

cell_2:	.byte	3	;Первый байт ячейки cell_2 расположен по адресу 0х62. 
					;Второй и третий - 0х63 и 0х64

cell_3:	.byte	1	;Байт ячейки cell_3 расположен по адресу 0х65


;###############################
;### СЕГМЕНТ ПАМЯТИ ПРОГРАММ ###
;###############################
.cseg
.org	0x10					;РАСПОЛОГАЕМ КОМАНДЫ НАЧИНАЯ С АДРЕСА 0х10

		ldi		temp,0x65		;Загружаем в регистр temp константу

		ldi		YL,low (cell) 	;Загрузка в YL младшего байта адреса ячейки памяти cell (0x60)
		ldi		YH,high(cell)	;Загрузка в YН старшего байта адреса cell (0x00)
		
		;Следующие команды выполняют то же самое, что и предыдущие две:
		ldi		YL,low (0x60) 	;Загрузка в YL младшего байта адреса ячейки памяти (0x60)
		ldi		YH,high(0x60)	;Загрузка в YН старшего байта адреса (0x00)

		;Следующие команды выполняют то же самое, что и предыдущие две:
		ldi		YL,0x60		 	;Загрузка в YL младшего байта адреса ячейки памяти (0x60)
		ldi		YH,0x00			;Загрузка в YН старшего байта адреса (0x00)
		
		;Следующие команды выполняют то же самое, что и предыдущие две:
		ldi		YL,cell 		;Загрузка в YL байта адреса ячейки памяти
		clr		YH

		;##############################
		;ЧТЕНИЕ ДАННЫХ ИЗ ПАМЯТИ ДАННЫХ
		;##############################
		
		;Запись в первый байт ячейки памяти с адресом 0х60
		st		Y,temp	;Переписали содержимое регистра temp в ячейку памяти 0x60
		inc		YL		;Увеличиваем адрес 
		st		Y,temp	;В ячейку по адресу 0х61 записываем содержимое регистра temp
		inc		YL		;Увеличиваем адрес 
		st		Y+,temp	;Переписали содержимое регистра temp в ячейку памяти 0x62
						;Адрес в регистре автоматически увеличился на 1
		st		Y+,temp	;Переписали содержимое регистра temp в ячейку памяти 0x63
		ldi		temp,0x80
		st		-Y,temp	;Адрес уменьшился на 1, затем произошла запись
		
		ldi		temp,0xFA

		ldi		YL,low (cell_2) ;Загрузка в YL младшего байта адреса ячейки памяти cell_2 (0х62)
		ldi		YH,high(cell_2)	;Загрузка в YН старшего байта адреса cell_2 (0x00)
		
.equ	const = 5

		std		Y + const,temp		;По адресу 0х62 + 0x05 = 0х67 записали содержимое temp
		std		Y + 1,temp			;По адресу 0х62 + 0x01 = 0х63 записали содержимое temp
		std		Y + const + 1,temp	;По адресу 0х68 записали содержимое temp
		
		ldi		temp,0x10
		
		ldi		XL,low (cell_3 + 1)	;В регистр Х загружаем адрес cell_3+1 (0х66)
		ldi		XH,high(cell_3 + 1)	;В регистр Х загружаем адрес cell_3+1 (0х66)
		
		st		-X,temp	;Записали в ячейку cell_3 (0x65) содержимое temp
		st		X+,temp	;Записали в ячейку c адресом 0x65 содержимое temp
		st		X+,temp	;Записали в ячейку c адресом 0x66 содержимое temp
		st		X,temp	;Записали в ячейку c адресом 0x67 содержимое temp


		;НЕПОСРЕДСТВЕННАЯ ЗАПИСЬ В ПАМЯТЬ ДАННЫХ
		ldi		temp,0x11
		sts		cell_3,temp	 	;Записали в ячейку по адресу 0х65 значение temp
		sts		cell_3+1,temp	;Записали в ячейку по адресу 0х66 значение temp
		sts		0x70,temp		;Записали в ячейку по адресу 0х70 значение temp

/*######################################################
К РОН и РВВ можно обращаться как к ячейкам памяти данных
#######################################################*/

;Запись в регистр SREG (УСТАНАВЛИВАЕМ ФЛАГИ T,H,S,V)
		ldi		temp,(1<<6|1<<5|1<<4|1<<3)
		sts		0x5F,temp			;Записали в ячейку по адресу 0х5F значение temp
		ldi		temp,(1<<6|0<<5|1<<4|0<<3)
		sts		SREG + 0x20,temp	;Адреса ячеек памяти данных на 0х20 больше, чем адреса РВВ

		sts		DDRD+0x20,temp		;Запись в РВВ DDRD как в ячейку ОЗУ

;Запись в регистр R0:
		ldi		temp,0x55
		sts		0x00,temp 			;Записали в ячейку по адресу 0х00 значение temp
;Запись в регистр R16 (temp):
		sts		0x10,temp 			;Записали в ячейку по адресу 0х10 (temp) значение temp
;Запись в регистр R17:
		sts		0x11,temp 			;Записали в ячейку по адресу 0х11 значение temp


/*######################################################
RAMEND - константа из файла описаний, содержащая адрес 
последней адрес последней ячейки памяти данных.
Для ATtiny2313 RAMEND = 0xDF
#######################################################*/

		sts		RAMEND,temp ;Записать в последнюю ячейку данных значение temp

		
/*######################################################
ПРОГРАММА ЗАПИСИ ПО ПРОИЗВОЛЬНОМУ АДРЕСУ ПОСЛЕДОВАТЕЛЬНО
УВЕЛИЧИВАЮЩИХСЯ ЧИСЕЛ
#######################################################*/
.equ	numb	=10		;Константа, определяющая сколько ячеек записать
.equ	adress	=0x60	;Константа, определяющая с какого адреса начать запись
.equ	content	=0x10	;Константа, определяющая начальное число

		ldi		temp,content
		ldi		ZL,low (adress)		;Устанавливаем начальный адрес
		ldi		ZH,high(adress)
write_to_ram:
		st		Z+,temp						;Записываем содержимое temp в Z
		inc		temp						;Увеличиваем temp на 1
		cpi		temp,low(numb + content)	;Сравниваем с младшим байтом константы (numb + content)
		brne	write_to_ram				;Если temp не равен, то переход на write_to_ram


		;##############################
		;ЧТЕНИЕ ДАННЫХ ИЗ ПАМЯТИ ДАННЫХ
		;##############################
		
		ldi		ZL,low (cell) 	;Загрузка в ZL младшего байта адреса ячейки памяти cell (0x60)
		ldi		ZH,high(cell)	;Загрузка в ZН старшего байта адреса cell (0x00)

		ld		temp,Z		;Прочитали из ячейки 0х60 данные в temp
		inc		ZL
		ld		R17,Z+		;Прочитали из ячейки 0х61 данные в R17
		clr		temp
		ld		temp,-Z		;Прочитали из ячейки 0х61 данные в temp
		ldd		temp,Z + 4	;Прочитали из ячейки 0х65 данные в temp
		
		lds		temp,0x70 	;Непосредственное чтение из ячейки 0x70

		rjmp	PC		;Зацикливаем программу

