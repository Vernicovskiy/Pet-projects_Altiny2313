
/*ФЛАГИ РЕГИСТРА СТАТУСА*/

.include "tn2313def.inc"

.def	temp	=R16


;##### ФЛАГ Z - ФЛАГ НУЛЯ #####
;Флаг устанавливается в 1, если результат выполняемой операции равен нулю
		ldi		temp,0xFE
		inc		temp		;0xFF
		inc		temp		;0x00	Результат операции равен нулю Z = 1
		inc		temp		;0x01
		
		ldi		temp,0x02
		dec		temp		;0x01
		dec		temp		;0x00	Результат операции равен нулю Z = 1
		dec		temp		;0xFF

		ldi		temp,45
		nop
		tst		temp		;Проверка регистра temp на ноль
		nop
		clr		temp		;Обнуляем регистр temp
		nop
		nop
		nop
		clz					;Сбросили флаг Z
		nop
		nop
		tst		temp		;Проверка регистра temp на ноль
		nop
		clz					;Сбросили флаг Z
		sez					;Установили флаг Z
		nop
		nop



;##### ФЛАГ С - ФЛАГ ПЕРЕНОСА #####
;ФЛАГ С СИГНАЛИЗИРУЕТ О ПЕРЕПОЛНЕНИИ РЕЗУЛЬТАТА
;Старший разряд переноситься в этот флаг
.def	temp2	=R18
		ldi		temp,0xFF
		ldi		temp2,0xFF
		add		temp,temp2	;СТАРШИЙ БИТ РЕЗУЛЬТАТА ОПЕРАЦИИ ПЕРЕШЕЛ В ФЛАГ С
		nop
		nop
		clr		temp2		;ОПЕРАЦИЯ CLR НЕ ВЛИЯЕТ НА ФЛАГ С
		clr		R20			;ОПЕРАЦИЯ CLR НЕ ВЛИЯЕТ НА ФЛАГ С
		adc		temp2,R20	;СЛОЖЕНИЕ РЕГИСТРОВ С ПЕРЕНОСОМ
							;ТЕПЕРЬ В TEMP2 - СТАРШИЙ БАЙТ РЕЗУЛЬТАТА (0x01)
							;В TEMP - МЛАДШИЙ БАЙТ РЕЗУЛЬТАТА (0xFE)
		nop
		nop
		
		sec					;Установить флаг С
		clc					;Сбросить флаг С


;Команды inc и dec НЕ ВЛИЯЮТ НА БИТ "С"
		ldi		temp,0b11111100
		inc		temp		;0b11111101
		inc		temp		;0b11111110
		inc		temp		;0b11111111
		inc		temp		;0b00000000 Произошло переполнение НО СТАРШИЙ БИТ НЕ ПЕРЕШЕЛ В ФЛАГ С
		inc		temp		;0b00000001
		inc		temp		;0b00000010
		
		


;##### ФЛАГ T - ПОЛЬЗОВАТЕЛЬСКИЙ ФЛАГ #####
;ФЛАГ T ОТДАН ПОД СВОБОДНОЕ РАСПОРЯЖЕНИЕ ПРОГРАММИСТА 
;И ПРЕДНАЗНАЧЕН ДЛЯ ВРЕМЕННОГО ХРАНЕНИЯ ИНФОРМАЦИИ
		ldi		temp,0b00001100
		bst		temp,2		;Запись второго разряда регистра temp в флаг Т
		nop
		bld		temp,0		;Загрузка нулевого разряда temp из флага T
		nop
		clt					;Сброс флага Т
		nop		
		set					;Установка флага Т
		nop



;##### ФЛАГ Н - ФЛАГ ПОЛОВИННОГО ПЕРЕНОСА #####
;Устанавливается в 1, если произошел перенос из младшей тетрады в старшую
;ТЕТРАДА - 4 БИТА

		ldi		temp,0b00001111
		ldi		temp2,0b00000001
		add		temp,temp2	;0b00010000 Произошло переполнение младших четырех бит
		nop					;(младшей тетрады)
		clh					;Сброс флага Н
		seh					;Установка флага Н
		nop


;##### ФЛАГ S - ФЛАГ ЗНАКА #####
;Вычисляется как исключающее ИЛИ между флагами N и V
; S = N XOR V


;##### ФЛАГ N - ФЛАГ ОТРИЦАТЕЛЬНОГО ЗНАЧЕНИЯ #####
;УСТАНАВЛИВАЕТСЯ В 1, ЕСЛИ СТАРШИЙ РАЗРЯД УСТАНОВЛЕН В 1.
;ЕСЛИ СТАРШИЙ РАЗРЯД НОЛЬ, ТО И ФЛАГ N ТАК ЖЕ НОЛЬ.
;Используется при работе в дополнительном коде (см. ниже)

		ldi		temp,0x02
		dec		temp		;0x01
		dec		temp		;0x00
		dec		temp		;0xFF Старший бит = 1
		dec		temp		;0xFE
		dec		temp		;0xFD

		ldi		temp,0b01111110
		inc		temp		;0b01111111
		inc		temp		;0b10000000 Старший бит = 1
		inc		temp


;##### ФЛАГ V - ПЕРЕПОЛНЕНИЕ ДОПОЛНИТЕЛЬНОГО КОДА #####
/*
ДОПОЛНИТЕЛЬНЫЙ КОД - условное понятие, когда
младшие семь бит используются для хранения числа,
а старший бит - для хранения знака числа.
Если бит равен 1, то число отрицательное.
Если бит равен 0, то число положительное.
*/
		ldi		temp,0b01111100
		inc		temp		;0b01111101
		inc		temp		;0b01111110
		inc		temp		;0b01111111
		inc		temp		;0b10000000 Произошло переполнение младших семи бит

		inc		temp		;0b10000001 
		inc		temp		;0b10000010
		
		
;УНИВЕРСАЛЬНАЯ КОМАНДА, ДЛЯ РАБОТЫ С ФЛАГАМИ РЕГИСТРА СТАТУСА
		bset	0			;Установили флаг С
		sec
		bclr	0			;Сбросили флаг С
		clc

		bset	1			;Установили флаг Z
		sez
		bclr	1			;Сбросили флаг Z
		clz

		bset	SREG_C		;Установили флаг С
		bset	SREG_Z		;Установили флаг Z

		in		temp,SREG	;Считали регистр статуса в РОН
		in		R16,0x3F	;Или так
		com		temp		;Побитная инверсия
		out		0x3F,temp	;Записали обратно в регистр статуса

	
MAIN:	rjmp	MAIN
