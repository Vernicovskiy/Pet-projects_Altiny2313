/*
БИБЛИОТЕКА 2-СТРОЧНОГО, 16-СИМВОЛЬНОГО LCD МОДУЛЯ НА БАЗЕ HD44780
ИСПОЛЬЗУЕТСЯ ПОДКЛЮЧЕНИЕ ПО 4-РАЗРЯДНОЙ ШИНЕ ДАННЫХ
ИНДИКАТОР ПОСТОЯННО НАСТРОЕН НА РАБОТУ В РЕЖИМЕ ЗАПИСИ (ВЫВОД RW = 0)

ВНИМАНИЕ! 
ПЕРЕД ИСПОЛЬЗОВАНИЕМ БИБЛИОТЕКИ ПРОИЗВЕСТИ СЛЕДУЮЩИЕ НАСТРОЙКИ:
1. ОПРЕДЕЛИТЬ ВЫВОДЫ ДЛЯ ПОДКЛЮЧЕНИЯ К ИНДИКАТОРУ
2. ВЫБРАТЬ КОНСТАНТУ ВРЕМЕННОЙ ЗАДЕРЖКИ Const_Delay_LCD, В ЗАВИСИМОСТИ ОТ ТАКТОВОЙ ЧАСТОТЫ

В БИБЛИОТЕКЕ ИСПОЛЬЗУЮТСЯ СЛЕДУЮЩИЕ РЕГИСТРЫ:
R16		В основных подпрограммах
R17		В подпрограмме задержки delay_LCD_44780
ZL и ZH используются в подпрограмме OutRow, но перед использованием сохраняются в стеке
*/

;### ОПРЕДЕЛЕНИЕ ВЫВОДОВ ###
.equ	PORT_LCD	=PORTD		;ПОРТ ДЛЯ LCD-ИНДИКАТОРА
.equ	DDR_LCD		=DDRD		;РЕГИСТР НАПРАВЛЕНИЯ ДАННЫХ ДЛЯ LCD-ИНДИКАТОРА
.equ	RS			=0			;вывод индикатора  RS  (КОМАНДА(0)/ДАННЫЕ(1))
.equ	E			=1			;вывод индикатора  E   (СТРОБ ЗАПИСИ)
.equ	LCD_D4		=2			;вывод индикатора  D4  
.equ	LCD_D5		=3			;вывод индикатора  D5
.equ	LCD_D6		=4			;вывод индикатора  D6
.equ	LCD_D7		=5			;вывод индикатора  D7

;### ВЫБОР КОНСТАНТЫ ВРЕМЕННОЙ ЗАДЕРЖКИ ###
;Для  1  MHz	 10
;Для  4  MHz	 25
;Для  8  MHz	 50
;Для 16  MHz	100
.equ	Const_Delay_LCD		=90

;====================== ПОЛЕЗНЫЕ МАКРОСЫ ============================
;#### ИНИЦИАЛИЗАЦИЯ ВЫВОДОВ, ИНИЦИАЛИЗАЦИЯ МОДУЛЯ LCD ####
.macro	Init_HD44780
		rcall	Init_LCD_HD44780
.endm
;####  ИНИЦИАЛИЗАЦИЯ ДЛЯ PROTEUS ####
.macro	Init_HD44780_Proteus
		rcall	Init_LCD_HD44780_Proteus
.endm
;#### ВЫВОД КОМАНДЫ ####
.macro	cmd
		ldi		R16,@0
		rcall	jecom
.endm
;#### ВЫВОД ДАННЫХ ####
.macro	dat
		ldi		R16,@0
		rcall	jedat
.endm
;#### ВЫВОД ДАННЫХ С АДРЕСА 0x30 ####
.macro	dat30
		ldi		R16,@0 + 0x30
		rcall	jedat
.endm
;#### ПЕРЕХОД НА ПЕРВУЮ СТРОКУ ИНДИКАТОРА ####
.macro	First_Line
		cmd		2
.endm
;#### ПЕРЕХОД НА ВТОРУЮ СТРОКУ ИНДИКАТОРА  ####		
.macro	Second_Line
		cmd		192
.endm	
;#### ПЕРЕХОД НА XX ЗНАКОМЕСТО ПЕРВОЙ СТРОКИ (1..16) ####
.macro	row1
		ldi		R16,(@0 - 1 + 0x00 + 0x80)
		rcall	jecom
.endm
;#### ПЕРЕХОД НА XX ЗНАКОМЕСТО ВТОРОЙ СТРОКИ (1..16) ####
.macro	row2
		ldi		R16,(@0 - 1 + 0x40 + 0x80)
		rcall	jecom
.endm
;#### ВЫВОД НА ИНДИКАТОР СТРОКИ СИМВОЛОВ ####
.macro	Row
		push	ZL
		push	ZH
		ldi		ZH,high(@0*2)
		ldi		ZL,low (@0*2)
		rcall	OutRow
		pop		ZH
		pop		ZL
.endm
;#### ВЫВОД НА ИНДИКАТОР ШЕСТНАДЦЕТИРИЧНОГО ЗНАЧЕНИЯ БАЙТА ####
.macro	Hex
		ldi		R16,@0
		rcall	prHEX
.endm
;====================================================================

;####  ВЫВОД НА ИНДИКАТОР СТРОКИ СИМВОЛОВ ####
OutRow:	lpm		R16,Z+		;Загружаем в регистр R16 первый символ строки символов
		cpi		R16,0		;Если R16 не равен 0, то продолжаем вывод
		breq	PC+3		;А если равен, то выходим из подпрограммы
		rcall	jedat		;Выводим символ
		rjmp	OutRow		;Переходим к следующему символу строки
		ret
		
;####  ВЫВОД НА ИНДИКАТОР ШЕСТНАДЦЕТИРИЧНОГО ЗНАЧЕНИЯ БАЙТА ####
prHEX:	push	R16
		swap	R16
		rcall	print4		;Печать старшей тетрады
		pop		R16
		rcall	print4		;Печать младшей тетрады
		ret
print4:	andi	R16,0x0F	;Отделяем младшую тетраду
		cpi		R16,10
		brcs	PC+2		;Если значение меньше 10, то сразу на печать
		subi	R16,-0x7	;Если больше, то переходим к началу алфавита (через 7 знаков после цифры 9)
		rcall	jedat30		;Вывод символа на печать
		ret

;===================== РАБОЧИЕ ПОДПРОГРАММЫ =========================
;####  ИНИЦИАЛИЗАЦИЯ ВЫВОДОВ, ИНИЦИАЛИЗАЦИЯ МОДУЛЯ LCD ####
Init_LCD_HD44780:  
		sbi		DDR_LCD,E		;Настройка выводов на выход
		sbi		DDR_LCD,RS
		sbi		DDR_LCD,LCD_D4
		sbi		DDR_LCD,LCD_D5
		sbi		DDR_LCD,LCD_D6
		sbi		DDR_LCD,LCD_D7
		rcall	delay_LCD_44780
		cmd		0b00000011	;Установка дисплея в начальное положение. Возврат курсора
		cmd		0b00000011	;Установка дисплея в начальное положение. Возврат курсора
		cmd		0b00000011	;Установка дисплея в начальное положение. Возврат курсора
		cmd		0b00101000	;Параметры интерфейса: Разрядность 4 бита. 2 строки. Размер шрифта 5х7
		cmd		0b00101000	;Параметры интерфейса: Разрядность 4 бита. 2 строки. Размер шрифта 5х7 (для надежности повторяем команду)
		cmd		0b00001000	;Выключение дисплея
		cmd		0b00000001	;Стирание дисплея
		cmd		0b00010000	;Запрет сдвига изображения
		cmd		0b00000110	;Автосмещение курсора вправо, после записи
		cmd		0b00000010	;Установка дисплея в начальное положение. Возврат курсора
		cmd		0b00101000	;Параметры интерфейса: Разрядность 4 бита. 2 строки. Размер шрифта 5х7
		cmd		0b00001100	;Включение дисплея. Запрет видимости курсора. Запрет мерцания курсора
		ret
		
;#### ВЫВОД ДАННЫХ С АДРЕСА 0х30 ####
jedat30:subi	R16,-0x30		;Вывод данных начиная с адреса 0x30. По этому адресу распологается начало числового ряда
;#### ВЫВОД ДАННЫХ С АДРЕСА 0х00 ####
jedat:	sbi		PORT_LCD,RS		;На выводе RS устанавливается 1
		rjmp	PC+2
;#### ВЫВОД КОМАНДЫ ####
jecom:	cbi		PORT_LCD,RS		;На выводе RS устанавливается 0
;### ВЫВОД БАЙТА В ПОРТ ###
		rcall	outLCD			;Выводим старшую тетраду в порт
		rcall	outLCD			;Выводим младшую тетраду в порт
		rcall	delay_LCD_44780	;Задержка 6,5 мс
		ret

;#### ВЫВОД СТАРШЕЙ ТЕТРАДЫ В ПОРТ ####	
outLCD:	cbi		PORT_LCD,LCD_D4	;Сбрасываем вывод D4
		cbi		PORT_LCD,LCD_D5	;Сбрасываем вывод D5
		cbi		PORT_LCD,LCD_D6	;Сбрасываем вывод D6
		cbi		PORT_LCD,LCD_D7	;Сбрасываем вывод D7
		sbrc	R16,4			;Пропускаем следующую строку, если 4-й разряд = 0
		sbi		PORT_LCD,LCD_D4	;Устанавливаем в 1 разряд D4
		sbrc	R16,5			;Пропускаем следующую строку, если 5-й разряд = 0
		sbi		PORT_LCD,LCD_D5	;Устанавливаем в 1 разряд D5
		sbrc	R16,6			;Пропускаем следующую строку, если 6-й разряд = 0
		sbi		PORT_LCD,LCD_D6	;Устанавливаем в 1 разряд D6
		sbrc	R16,7			;Пропускаем следующую строку, если 7-й разряд = 0
		sbi		PORT_LCD,LCD_D7	;Устанавливаем в 1 разряд D7
		sbi		PORT_LCD,E		;Импульс на выводе "Е" записывает тетраду в LCD
		swap	R16				;Меняем тетрады местами + небольшая задержка строба
		cbi		PORT_LCD,E
		ret
		
;#### ВРЕМЕННАЯ ЗАДЕРЖКА ####
;Задержка по времени около 6,5 мс
delay_LCD_44780:
		push	R16
		ldi		R16,Const_Delay_LCD
dlylcd:	ldi		R17,25
		dec		R17
		brne	PC-1
		dec		R16
		brne	dlylcd
		pop		R16
		ret
		
;####  ИНИЦИАЛИЗАЦИЯ ДЛЯ PROTEUS ####
Init_LCD_HD44780_Proteus:
		sbi		DDR_LCD,E
		sbi		DDR_LCD,RS
		sbi		DDR_LCD,LCD_D4
		sbi		DDR_LCD,LCD_D5
		sbi		DDR_LCD,LCD_D6
		sbi		DDR_LCD,LCD_D7
		cmd		0x02
		cmd		0x28
		cmd		0x0C
		ret
		
