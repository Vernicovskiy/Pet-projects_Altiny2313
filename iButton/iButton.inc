/* БИБЛИОТЕКА ДЛЯ СЧИТЫВАНИЯ ID-КОДА + ФУНКЦИЯ СРАВНЕНИЯ С ЗАРАНЕЕ ЗАДАННЫМ КОДОМ

Используются регистры R16, R17, R18, YL, YH, ZL, ZH

Перед использованием библиотеки произвести настройку библиотеки MicroLan.inc

Подпрограмма ReadID производит считывание 64-битного ID-кода в 8 ячеек области памяти данных.
Адрес первой ячейки указывается в регистре Z. В первую ячейку считывается младший байт (групповой код).
После вызова ReadID флаг Т содержит состояние линии данных:
Т=0		Ошибок нет	
Т=1		На линии ошибка. Код ошибки находится в регистре R16

Подпрограмма CheckID производит сравнение 8 байт ID-кода. Сравнение производится между байтами в памяти данных 
и байтами в программной памяти.
Перед вызовом подпрограммы CheckID в регистр Y необходимо занести адрес расположения первого байта в памяти данных.
В регистр Z необходимо занести адрес расположения первого байта в памяти программ.
После вызова CheckID флаг Т содержит информацию о совпадении 8 байт памяти программ и 8 байт памяти данных:
Т=0		ID-коды не совпадают
Т=1		ID-коды совпадают
*/

;#### БИБЛИОТЕКА ПРОТОКОЛА 1-WIRE ####
.include "MicroLan.inc"

;МАКРОС СЧИТЫВАНИЯ 8 БАЙТ ID-КОДА. 
;В аргументе прописывается адрес в памяти данных, куда будет сохраняться считанный код
.macro		Read_ID							;Макрос считывания ID-кода микросхемы
			push	ZL						;в байты памяти данных
			push	ZH
			ldi		ZH,High(@0)				;В регистр Z записывается адрес первого байта,
			ldi		ZL,Low (@0)				;начиная с которого будут записываться считанные байты ID-кода
			rcall	readID					;Вызывается подпрограмма считывания ID
			pop		ZH
			pop		ZL
.endm

;МАКРОС СРАВНЕНИЯ СЧИТАННОГО ID-КОДА С КОДОМ В ПАМЯТИ ДАННЫХ.
;В первом аргументе должен быть записан адрес первого байта в памяти данных
;Во втором аргументе должен быть записан адрес первого байта в памяти программ
.macro		Check_ID						;Макрос сравнения ID-кода в памяти данных с 
			push	ZL						;ID-кодом в программной памяти
			push	ZH
			push	YL
			push	YH
			ldi		YH,High(@0)				;В регистр Y записывается начало расположения
			ldi		YL,Low (@0)				;ID-кода в памяти данных
			ldi		ZH,High(@1*2)			;В регистр Z записывается начало расположения
			ldi		ZL,Low (@1*2)			;ID-кода в программной памяти
			rcall	CheckID					;Вызывается подпрограмма сравнения кодов
			pop		YH
			pop		YL
			pop		ZH
			pop		ZL
.endm

;#### ЧТЕНИЕ 64 БИТНОГО ID КОДА ####
ReadID:			rcall	resLAN				;Сброс
				tst		R16					;Проверка кода ошибки
				set							;Предварительная установка флага ошибки
				brne	Error_Reset			;Ошибка
				clt							;Сброс флага ошибки
				ldi		R16,0x33			;Команда на чтение 48-битного кода
				rcall	wr8LAN				;Выдача команды на линию
				ldi		R18,8				;Загрузка начального значения в счетчик принятых байтов
Rd_nxt_ID_b:	push	R18					;Сохранение значения счетчика в стеке
				rcall	rd8LAN				;Считывание байта
				pop		R18					;Восстановление счетчика из стека
				st		Z+,R16				;Запись считанного байта в память данных
				dec		R18					;Уменьшение счетчика принятых байтов
				brne	Rd_nxt_ID_b
Error_Reset:	ret

;#### СРАВНЕНИЕ КОДА В ПАМЯТИ ДАННЫХ С КОДОМ В ПАМЯТИ ПРОГРАММ ####
CheckID:		ldi		R18,8				;Загрузка начального значения в счетчик байтов
				clt							;Предварительный сброс флага совпадения 
Ch_nxt_bt_ID:	lpm		R16,Z+				;Считывание байта из памяти программ
				ld		R17,Y+				;Считывание байта из памяти данных
				cp		R16,R17				;Сравнение байт
				brne	Err_Check			;Переход по метке Err_Check, если байты не совпадают
				dec		R18					;Уменьшение счетчика сравниваемых байтов
				brne	Ch_nxt_bt_ID
				set							;Установка флага совпадения
Err_Check:		ret

