/*
ПРИМЕР ИСПОЛЬЗОВАНИЯ СВЕТОДИОДНЫХ СЕМИСЕГМЕНТНЫХ ИНДИКАТОРОВ
В РЕЖИМЕ ДИНАМИЧЕСКОЙ ИНДИКАЦИИ

Количество семисегментных индикаторов 4
Частота обновления 200 Hz

Используется индикатор с общим катодом.
Схема включения:
К младшему разряду порта подключается сегмент А
К старшему разряду порта подключается сегмент Н (точка)

Программа реализует простейший цифровой счетчик.
После включении питания, счетчик показывает число 0000
При нажатии на кнопку SB, счетчик увеличивает свое значение на 1
После числа 9999, счетчик сбрасывается в ноль.

Микроконтроллер:	ATtiny2313
Тактовая частота:	8 MHz		( ! ! ! )
*/

.include "tn2313def.inc"

.def	temp		=R16
.def	loop		=R17
.def	numb		=R18	;Регистр номера индикатора, 
							;активного в данный момент времени

.def	Dig_1		=R19	;Единицы
.def	Dig_2		=R20	;Десятки
.def	Dig_3		=R21	;Сотни
.def	Dig_4		=R22	;Тысячи

.def	clock		=R23	;Счетный регистр подпрограммы задержки


.equ	PORT_LED	=PORTB	;Порт сегментов индикатора

.equ	LED_Switch	=PORTD	;Порт для управления ключами индикаторов
.equ	Ind_1		=3		;Ключ для управления индикатором 1 (единицы)
.equ	Ind_2		=4		;Ключ для управления индикатором 2 (десятки)
.equ	Ind_3		=5		;Ключ для управления индикатором 3 (сотни)
.equ	Ind_4		=6		;Ключ для управления индикатором 4 (тысячи)

.equ	PORT_but	=PORTD	;Прот для кнопки управления
.equ	PIN_but		=PIND
.equ	SB			=0		;Вывод прота для кнопки


.cseg
.org	0x00
		rjmp	init		;ИНИЦИАЛИЗАЦИЯ
.org	0x04
		rjmp	T1_match_A  ;(0х04) Совпадение А таймера/счетчика Т1
.org	0x20


;ИНИЦИАЛИЗАЦИЯ
init:		ldi		temp,RAMEND	;Инициализация стека
			out		SPL,temp
		
			ser		temp		;Порт В на выход
			out		DDRB,temp
			out		PORTB,temp

			ldi		temp,~(1<<SB)	;Все выводы, кроме SB на выход.
			out		DDRD,temp
			ldi		temp,(1<<SB)	;На выводе SB подтягивающий резистор, остальные выводы =0
			out		PORTD,temp
			
			ldi		numb,4		;Обязательно занести начальное значение, отличное от нуля


;НАСТРОЙКА ТАЙМЕРА Т1

			ldi		temp,(1<<OCIE1A)
			out		TIMSK,temp
/*Бит OCIE1A разрешает прерывание по совпадению в канале А (0х04) таймера Т1*/

;####################################################################
/*Каждый индикатор должен переключаться с частотой не меньше 50 Гц.
Если в схеме установлены 4 индикатора, то частота 
с которой должны переключаться эти индикаторы должна быть 
в 4 раза больше: 50*4 = 200 Гц */
;####################################################################

			ldi		temp,(1<<WGM12|0<<CS12|1<<CS11|1<<CS10) ;деление 64
			out		TCCR1B,temp
;В регистре TCCR0B, устанавливаем коэффициент деления 64
;Частота таймера Т1 составляет: 8000000/64 = 125000 Hz

			ldi		temp,high(625)
			out		OCR1AH,temp
			ldi		temp,low(625)
			out		OCR1AL,temp
/*В регистр совпадения OCR1A записана константа 625.
При совпадении регистра сравнения OCR1A со счетным регистром ТСNT1 
произойдет прерывание по совпадению в канале A.
Частота вызова прерывания по совпадению составляет: 125000/625 = 200 Hz*/

			clr		Dig_1	;Обнуление разрядов счетчика
			clr		Dig_2
			clr		Dig_3
			clr		Dig_4

			ldi		Dig_1,1		;Единицы
			ldi		Dig_2,2		;Десятки
			ldi		Dig_3,3		;Сотни
			ldi		Dig_4,4		;Тысячи


			sei		;ГЛОБАЛЬНОЕ РАЗРЕШЕНИЕ ПРЕРЫВАНИЙ
		


;##### ОСНОВНОЙ ЦИКЛ #####
MAIN:		rcall	klav		;Вызов подпрограммы считывания состояния кнопки
			rcall	Count_Up	;Подпрограмма увеличения счетчика
			rjmp	MAIN
;#########################

;Подпрограмма увеличения значения счетчика
Count_Up:	brts	PC+2		;Если флаг Т=0, то завершаем подпрограмму
Exit:		ret
			clt					;Сбрасываем флаг отработки события нажатия кнопки
			inc		Dig_1		;Увеличиваем единицы
			cpi		Dig_1,10	;Если значение не 10, то выходим
			brne	Exit			
			clr		Dig_1		;А если 10, то обнуляем единицы,
			inc		Dig_2		;и увеличиваем десятки 
			cpi		Dig_2,10	;Далее, по аналогии, увеличиваем и проверяем старшие разряды
			brne	Exit
			clr		Dig_2
			inc		Dig_3		
			cpi		Dig_3,10
			brne	Exit
			clr		Dig_3
			inc		Dig_4		;Увеличиваем тысячи
			cpi		Dig_4,10	;Если значение не 10, то выходим
			brne	Exit
			clr		Dig_4		;Обнуляем тысячи
			ret

;Подпрограмма считывания состояния кнопки
klav:		sbic	PIN_but,SB		;Выход, если кнопка не нажата
			ret
			rcall	delay			;Задержка против дребезга
			sbis	PIN_but,SB		;Ожидание отпускания кнопки
			rjmp	PC-1
			rcall	delay			;Задержка против дребезга
			set						;Установка флага Т - признак нажатия кнопки
			ret
;Задержка
delay:		ldi		clock,10	;Заносим в регистр задержки желаемый коэфициент
			tst		clock		;Проверяем на нулевое значение
			brne	PC-1		;Ждем, пока не ноль
			ret



;### ПРЕРЫВАНИЕ ПО СОВПАДЕНИЮ В КАНАЛЕ A ###
;Частота прерываний 200 Гц
T1_match_A:	in		R5,SREG		;Сохраняем регистр статуса
			rcall	Dyn_ind		;Вызываем подпрограмму динамической индикации
			dec		clock		;Уменьшаем регистр подпрограммы задержки delay
			out		SREG,R5		;Восстанавливаем регистр статуса
			reti



;ПОДПРОГРАММА ДИНАМИЧЕСКОЙ ИНДИКАЦИИ
Dyn_ind:	dec		numb		;Уменьшаем значение счетчика разрядов
			brne	PC+2
			ldi		numb,4		;Если значение достигло нуля, то записываем 4

			ldi		ZH,high(Table_code*2)	;В регистр Z загружаем адрес начала
			ldi		ZL,low(Table_code*2)	;таблицы конвертации цифр
			
			cbi		LED_Switch,Ind_1		;Отключаем питание для всех разрядов
			cbi		LED_Switch,Ind_2
			cbi		LED_Switch,Ind_3
			cbi		LED_Switch,Ind_4

			cpi		numb,1	;Определяем номер разряда, который требуется отобразить
			breq	D1		;и переходим к его обработке
			cpi		numb,2
			breq	D2
			cpi		numb,3
			breq	D3

D4:			add		ZL,Dig_4				;Складываем адрес начала таблицы и число, которое необходимо отобразить
			sbi		LED_Switch,Ind_4		;Подаем питание на соответствующий разряд индикатора
			rjmp	DD
D3:			add		ZL,Dig_3
			sbi		LED_Switch,Ind_3
			rjmp	DD
D2:			add		ZL,Dig_2
			sbi		LED_Switch,Ind_2
			rjmp	DD
D1:			add		ZL,Dig_1
			sbi		LED_Switch,Ind_1

DD:			clr		temp
			adc		ZH,temp		;Складываем бит переноса и старший байт регистра Z
			lpm					;Считываем из таблицы преобразованные значения в регистр R0
		;	com		R0			;Инверсия разрядов индикатора (для индикатора с общим анодом)
			out		PORT_LED,R0	;Выводим их в порт на сегменты индикатора
			ret

;Таблица символов для перекодировки кода числа в код, 
;соответствующий отображаемому символу на индикаторе.

;Подключение hgfedcba
;К младшему разряду порта подключается сегмент А
;К старшему разряду порта подключается сегмент Н (точка)

Table_code:
.db		0b00111111, 0b00000110	;0, 1
.db		0b01011011, 0b01001111	;2, 3
.db		0b01100110, 0b01101101	;4, 5
.db		0b01111101, 0b00000111	;6, 7
.db		0b01111111, 0b01101111	;8, 9
.db		0b01110111, 0b01111100	;A, b
.db		0b00111001, 0b01011110	;C, d
.db		0b01111001, 0b01110001	;E, F
.db		0b01000000, 0b00000000	;-, пусто

;Или из программы Digit Preparing v.2
;Table_code:
;.db		0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71


;Подключение abcdefgh
;К младшему разряду порта подключается сегмент H (точка)
;К старшему разряду порта подключается сегмент A
/*Table_code:
.db		0b11111100, 0b01100000	;0, 1
.db		0b11011010, 0b11110010	;2, 3
.db		0b01100110, 0b10110110	;4, 5
.db		0b10111110, 0b11100000	;6, 7
.db		0b11111110, 0b11110110	;8, 9
.db		0b11101110, 0b00111110	;A, b
.db		0b10011100, 0b01111010	;C, d
.db		0b10011110, 0b10001110	;E, F
.db		0b00000010, 0b00000000	;-, пусто
*/
