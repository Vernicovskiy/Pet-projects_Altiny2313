.include "tn2313def.inc"

.def	temp	=R16
.def	temp2	=R18
.equ	const	=0b10001101
		
		nop							;Пустая команда, занимающая 1 такт (1 такт при частоте 1 MHz = 1 мкс)
		nop
		ser		temp 				;Устанавливаем во всех разрядах значения 1
		nop							;(эквивалент ldi  temp,0xFF)
;---------------------
		clr		temp				;Сбрасываем регистр (во всех разрядах 0)
		nop			 				;(эквивалент ldi  temp,0x00)
;---------------------
		inc		temp 				;Увеличиваем значение регистра на 1
		inc		temp				;0x01
		inc		temp				;0x02
		ldi		temp,0xFE
		inc		temp				;0xFF
		inc		temp				;0x00
		inc		temp				;0x01
		nop
;---------------------
		ldi		temp,0x02
		dec		temp 				;Уменьшаем значение регистра на 1
		dec		temp				;0x00
		dec		temp				;0xFF
		nop
;---------------------
		ldi		temp,const
		com		temp 				;Инверсия разрядов регистра
		nop			 				;(эквивалентно выражению 0xFF - const)
;---------------------
		ldi		temp,const
		neg		temp 				;Перевод в дополнительный код
		nop			 				;(инверсия разрядов, затем увеличение на 1)
;---------------------
		ldi		temp,0b11110000
		andi	temp,0b01010101		;Логическое "И" регистра и константы 
		nop
;---------------------
		ldi		temp, 0b11110000
		ldi		temp2,0b01010101
		and		temp,temp2 			;Логическое "И" двух регистров 
		nop
;---------------------
		ldi		temp,0b11110000
		ori		temp,0b01010101 	;Логическое "ИЛИ" регистра и константы 
		nop
;---------------------
		ldi		temp, 0b11110000
		ldi		temp2,0b01010101
		or		temp,temp2 			;Логическое "ИЛИ" двух регистров 
		nop
;---------------------
		ldi		temp, 0b11110000
		ldi		temp2,0b01010101
		eor		temp,temp2 			;"Исключающее ИЛИ" двух регистров 
		nop
;---------------------
		ser		temp
		cbr		temp,0b00101000 	;Сброс 3 и 5 разрядов
		nop							;Эквивалентно andi temp,(0xFF - 0b00101000)
;---------------------
		clr		temp
		sbr		temp,0b00101000 	;Установка 3 и 5 разрядов
		nop							;Эквивалентно ori temp,0b00101000
;---------------------
.equ	bit_5	=5
		sbi		DDRD,4				;Установили 4-й вывод порта D на выход
		sbi		DDRD,bit_5			;Установили 5-й вывод порта D на выход
		nop
;---------------------
.equ	bit_4	=4
		ser		temp
		out		DDRB,temp			;Все выводы порта В на выход
		out		PORTB,temp			;На всех выводах логические единицы
		cbi		DDRB,bit_4			;4-й вывод порта В настроили на вход
		cbi		PORTB,bit_5			;Сбросили 5-й вывод порта В (записали логический 0)
		sbi		DDRB,PB4			;4-й вывод порта В настроили на выход (PB4 = 4)
		sbi		PORTB,PD5			;Установили 5-й вывод порта В (записали логическую 1) (PD5 = 5)
		nop
;---------------------
.equ	mask	=0b00110000			;Битовая (разрядная) маска
		in		temp,PIND			;Считываем сотояние выводов порта D
		com		temp				;Инвертировали считаный байт
		andi	temp,mask			;Наложение маски (Обнуление всех разрядов, кроме 5 и 4)
		nop


;Популярные ошибки
		in		temp,0x17		;В регистр R16 будет загружено значение из регистра DDRB (адрес 0x17 = DDRB)
		ldi		temp,PORTB		;В регистр R16 будет загружена константа 0x18 (.equ	PORTB	= 0x18)
		out		0x12,temp		;В РВВ по адресу 0x12 будет записано значение из temp (.equ	PORTD	= 0x12)
		cbr		temp,5			;В регистре будут сброшены биты 0 и 2 (5 = 0b00000101)
		sbr		temp,0			;В регистре ни один бит установлен не будет
		sbi		PORTB,0b00000110;В регистре будет установлен бит 6 (6 = 0b00000110)
		cbi		PORTD,0b00000100;В регистре будет сброшен бит 4 (4 = 0b00000100)
	//	ldi		temp,0хВА		;Английские буквы перепутаны с русскими


;Формирование на выводе PB0 прямоугольного сигнала с частотой 125 kHz (период 8/1000000 Hz = 0,000008 сек)
main:	cbi		PORTB,PB0			;На выводе PB0 ноль (2 такта = 2 мкс)
		nop							;1 такт (1 мкс)
		nop							;1 такт (1 мкс)
		sbi		PORTB,PB0			;На выводе PB0 единица (2 такта = 2 мкс)
		rjmp	main				;2 такта (2 мкс)






