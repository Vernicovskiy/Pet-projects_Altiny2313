/*
ПОДКЛЮЧЕНИЕ МАТРИЧНОЙ КЛАВИАТУРЫ
Программа производит сканирование матричной клавиатуры
и при обнаружении нажатой кнопки, выводит ее двоичный номер 
в порт D. Если ни одна кнопка не нажата, то в порт записывается
ноль.

Матричная клавиатура состоит из 4 строк и 4 столбцов:
МЛАДШИЕ 4 разряда порта - столбцы 
СТАРШИЕ 4 разряда порта - строки

ВНИМАНИЕ!
Кнопка с номером 1 должна находиться на 
пересечении 1-ой строки (4-й разряд) и 1-ого столбца (0-й разряд)

Кнопка 3 - 3-я строка (6-й разряд) и 1-й столбец (0-й разряд)

Кнопка 10 - 2-я строка (5-й разряд) и 3-й столбец (2-й разряд)

Кнопка 16 - 4-я строка (7-й разряд) и 4-й столбец (3-й разряд)

Микроконтроллер		ATtiny2313
Тактовая частота	1 MHz
*/

.include "tn2313def.inc"

.equ	PIN_key		=PINB
.equ	PORT_key	=PORTB

.def	temp	=R16
.def	loop	=R17

.cseg
.org	0x00
		rjmp	init

.org	0x20
init:		ldi		temp,RAMEND
			out		SPL,temp
			
			ser		temp		;Порт D на выход
			out		DDRD,temp

;Для подключения матричной клавиатуры используется весь порт В
;Младшие 4 разряда порта В установлены на выход
;Старшие 4 разряда - на вход с подтягивающими резисторами
			ldi		temp,0x0F	
			out		DDRB,temp
			ldi		temp,0xF0
			out		PORTB,temp


;#### ОСНОВНОЙ ЦИКЛ ####
main:		rcall	Keyboard	;Вызов подпрограммы считывания матричной клавиатуры
			out		PORTD,loop	;В порт D записывается значение регистра loop 
			rjmp	main


;### ОПРОС КЛАВИАТУРЫ ###
Keyboard:	ldi		temp,0b11111110	;Нулевой разряд порта в ноль (опрашиваем 1-Й СТОЛБЕЦ)
			rcall	Ch_pin			;Вызываем подпрограмму опроса строк
			tst		loop			;Проверяем на отсутствие нажатых кнопок
			breq	COL_2			;Если ни одна кнопка не нажата, то переходим к следующему столбцу
			subi	loop,-0			;Эта команда лишняя. Записана в учебных целях для улучшения восприятия кода
			ret						;Если кнопка оказалась нажатой, то выходим из подпрограммы
COL_2:		ldi		temp,0b11111101	;Первый разряд порта в ноль (2-Й СТОЛБЕЦ)
			rcall	Ch_pin
			tst		loop
			breq	COL_3
			subi	loop,-4			;Номера кнопок во втором столбце начинаются с 5 
			ret						;После вычисления номера нажатой кнопки, выходим из подпрограммы
COL_3:		ldi		temp,0b11111011	;Второй разряд порта в ноль (3-Й СТОЛБЕЦ)
			rcall	Ch_pin
			tst		loop
			breq	COL_4
			subi	loop,-8			;Номера кнопок в третьем столбце начинаются с 9
			ret						;После вычисления номера нажатой кнопки, выходим из подпрограммы
COL_4:		ldi		temp,0b11110111	;Третий разряд порта в ноль (4-Й СТОЛБЕЦ)
			rcall	Ch_pin
			tst		loop
			breq	Exit_Col			;Если в 4-ом столбце ни одна кнопка не нажата, то выходим
			subi	loop,-12		;Номера кнопок в четвертом столбце начинаются с 13
Exit_Col:	ret						;После вычисления номера нажатой кнопки, выходим из подпрограммы

;Подпрограмма считывания строки
Ch_pin:		
			out		PORT_key,temp	;Обнуляем вывод порта (выбираем нужный столбец)

			ldi		loop,0b11111111	;В вспомогательный регистр загружаем 0xFF
			eor		temp,loop		;Инверсия значения в temp
			out		DDRB,temp		;Переводим на выход только один вывод
			
			clr		loop			;Заранее записываем ноль, если ни одна кнопка в столбце не будет нажата
			in		temp,PIN_key	;Считываем состояние строки
			com		temp			;Инвертируем (после инверсии нажатая кнопка - лог. 1)
			andi	temp,0b11110000	;Обнуляем ненужные младшие разряды
LINE_4:		cpi		temp,0b10000000	;Проверяем на замыкание 4-ю строку
			brne	LINE_3
			ldi		loop,4			;Записываем номер кнопки в строке
			ret
LINE_3:		cpi		temp,0b01000000	;Проверяем на замыкание 3-ю строку
			brne	LINE_2
			ldi		loop,3
			ret
LINE_2:		cpi		temp,0b00100000	;Проверяем на замыкание 2-ю строку
			brne	LINE_1
			ldi		loop,2			
			ret
LINE_1:		cpi		temp,0b00010000	;Проверяем на замыкание 1-ю строку
			brne	No_BUT			;Переходим на No_BUT, если ни одна кнопка в столбце не нажата
			ldi		loop,1
No_BUT:		ret						;Ни одна кнопка не нажата, в регистре loop ноль
